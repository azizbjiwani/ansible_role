server_tokens off;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block";
add_header Strict-Transport-Security max-age=15768000;includeSubdomains

server {

	listen [::]:80;
	listen 80;
	server_name _;
	charset utf-8;
	root {{ app_root }}/public;

	client_max_body_size {{ nginx_file_upload_limit_mb }}M;

	#if ($http_x_forwarded_proto != "https") {
	#	rewrite ^ https://$host$request_uri permanent;
	#}

	if ($query_string != "") {
    	set $no_cache 1;
	}

	location ~* \.(?:css|js|map|jpe?g|gif|png)$ { }

	location / {

		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;

		index index.php;
		try_files $uri $uri/ /index.php?q=$uri&$args;
	}

	# Add ELB healthcheck in case of https redirect
	location /health-check {
		access_log off;
		return 200;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	# Deny all xmlrpc.php access
	location = /xmlrpc.php {
		deny all;
		access_log off;
	}

	# Deny hidden files and folders such as .git
	location ~ /\. {
		access_log off;
		log_not_found off;
		deny all;
	}

	# Accept for Let's Encrypt(certbot)
	location ^~ /.well-known/ {
		access_log off;
		log_not_found off;
		autoindex off;
		try_files $uri $uri/ =404;
	}

	# Deny less files
	location ~* ^.+\.(less)$ {
		deny all;
		access_log off;
	}

	# Deny access to any files with a .php extension in the uploads directory
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}

	# Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
	location ~* \.(engine|inc|info|install|make|module|profile|test|po||pl|py|lua|sh|.*sql|theme|tpl(\.php)?|xtmpl)\$|^(\..*|Entries.*|Repository|Root|Tag|Template)\$|\.php_ {
		return 444;
	}

	# Directives to send expires headers and turn off 404 error logging.
	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
		access_log off;
		log_not_found off;
		expires max;
	}

	# Process files matching php extension
	location ~ \.php(?:/|$) {
        if (!-f $document_root$fastcgi_script_name){
            rewrite ^ /index.php break;
        }

        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass {{ fastcgi_pass }};
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
  }
}
